@inherits InputViewBase<string, TextBoxField>

@if (!Field.IsEffectivelyBlank)
{
    <div class="d-flex flex-column">

        <MudTextField Label="@EffectiveLabel"
            Value="@Field.Value.Value"
            ValueChanged="@(EventUtil.AsNonRenderingEventHandler<string>(
                async (val) => await Field.Value.SetValue(val)))"
            Variant="@Variant.Outlined"
            Margin="@Margin.Dense"
            Error="@(!string.IsNullOrEmpty(Field.ValidationMessage))"
            Disabled="@Field.IsDisabled"
            OnBlur="@HandleBlur" />

        @if (!string.IsNullOrEmpty(Field.ValidationMessage))
        {
            <MudText Typo="@Typo.body2" Color="@Color.Error">@Field.ValidationMessage</MudText>
        }

    </div>
}

@code {
    // MudBlazor field loses invalid state on blur; force redraw if field
    // should remain in invalid state
    private Action HandleBlur => string.IsNullOrEmpty(Field.ValidationMessage)
        ? EventUtil.AsNonRenderingEventHandler(() => { })
        : StateHasChanged;
}