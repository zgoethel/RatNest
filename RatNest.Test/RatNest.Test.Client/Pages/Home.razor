@page "/"
@inject HomeVm vm

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

@if (!loading)
{
    <div class="d-flex flex-row gap-2 my-3">
        <div>

            <MudCheckBox T="bool"
                Label="Set IsVisible directly"
                Value="@vm.LeftArea.IsVisible"
                ValueChanged="@vm.LeftArea.SetIsVisible"
                Dense
                Size="@Size.Small"
                Style="user-select: none;" />

            <TextBoxView Field="@vm.LeftField" />

        </div>
        <div>

            <MudCheckBox T="bool"
                Label="Toggle Hidden flag in State"
                Value="@(!vm.RightArea.IsHidden)"
                ValueChanged="@(async (val) =>
                {
                    await vm.RightArea.SetState(val
                        ? FormElementState.None
                        : FormElementState.Hidden);
                })"
                Dense
                Size="@Size.Small"
                Style="user-select: none;" />

            <TextBoxView Field="@vm.RightField" />

        </div>
    </div>

    <NamedValueTable NamingContext="@vm.TopLevel.NamingContext" />
}

@code {
    private bool loading = true;

    private async Task Redraw()
    {
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        await vm.Initialize();

        await vm.LeftField.SetValue("Hello, world!");
        await vm.RightField.SetValue("Foo bar");

        loading = false;
    }
}